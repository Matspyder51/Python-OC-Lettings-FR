# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
         name: install dependencies and make env
         command: |
          python3 -m venv venv
          . venv/bin/activate
          pip install -r requirements.txt
      - run:
         name: Check PeP8
         command: |
          . venv/bin/activate
          flake8
      - run:
          name: Run pytest
          command:
            . venv/bin/activate
            pytest
  deploy:
    machine: true
    steps:
      - checkout
      - run:
         name: Build app and send Docker IMG to Heroku
         command: |
          sudo curl https://cli-assets.heroku.com/install.sh | sh
          HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
          HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a oclettings-matspyder web
          HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a oclettings-matspyder web

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  sample: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
      - deploy:
         requires:
           - build-and-test
         filters:
           branches:
             only: master

      

